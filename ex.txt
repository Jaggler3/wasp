;>@3|				var i:0 			to 1						INDEX = 0
;>_0|				var n:1 			to 6						INDEX = 1
$-					var n:1 			decrements to 5				INDEX = 1
;>(					var iteration:2 	is a function				INDEX = 2
	;>@5|			var sp:3 			is a space " "				INDEX = 3
	[<<]			move to n:1										INDEX = 1
	##@3|			if n not = 1									INDEX = 1
		[>>]		move to sp:3|		" "							INDEX = 3
		$'[<<]		(" " * N)										INDEX = 3
		!!$			print spaces									INDEX = 3
	#				end if											INDEX = 3 || 1
	?				restart index		var i						INDEX = 0
	;>_1|			var sym:4			to "3"						INDEX = 4
	$'[<<<<]		# * i											INDEX = 4
	!$				print symbols									INDEX = 4
	?				restart index									INDEX = 0
	$+				i:0					increments					INDEX = 0
	[>]				move to n:1										INDEX = 1
	$-				n:1					decrements
	##
)

number i = 1;
number n = 6;
n--;

function iteration
{
	string sp = " ";
	ifn(n == 1)
	{
		sp *= n;
		s_print sp;
	}
	
	string symbol = "#";
	symbol *= i;
	print symbol;
	
	i++;
	n--;
	
	//auto garbage collect?
	
	ifn(n == 0)
	{
		call iteration;
	}
}